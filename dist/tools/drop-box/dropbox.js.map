{"version":3,"sources":["../../../src/tools/drop-box/dropbox.js"],"names":["Dropbox","initToken","initStore","file","name","_store","resource","parameters","path","readStream","error","log","rFileName","Promise","resolve","reject","console","pipe","fs","createWriteStream","join","__dirname","userID","fileName","token","store","dropboxV2Api","authenticate","_token"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;IAEqBA,O;;;AACnB,qBAAc;AAAA;;AACZ,SAAKC,SAAL;AACA,SAAKC,SAAL;AACD;;;;;;;+CAEYC,I,EAAMC,I;;;;;;uBACX,KAAKC,MAAL,CACJ;AACEC,kBAAAA,QAAQ,EAAE,cADZ;AAEEC,kBAAAA,UAAU,EAAE;AACVC,oBAAAA,IAAI,iBAAUJ,IAAV;AADM,mBAFd;AAKEK,kBAAAA,UAAU,EAAEN;AALd,iBADI,EAQJ,UAAAO,KAAK,EAAI;AACP,sBAAIA,KAAJ,EAAWC,mBAAID,KAAJ,CAAUA,KAAV;AACZ,iBAVG,C;;;;;;;;;;;;;;;;;;6BAcCE,S,EAAW;AAAA;;AAClB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAA,KAAI,CAACV,MAAL,CACE;AACEC,UAAAA,QAAQ,EAAE,gBADZ;AAEEC,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,iBAAUI,SAAV;AADM;AAFd,SADF,EAOE,UAAAF,KAAK,EAAI;AACP,cAAIA,KAAJ,EAAW;AACTM,YAAAA,OAAO,CAACN,KAAR,CAAcA,KAAd;AACAK,YAAAA,MAAM,CAACL,KAAD,CAAN;AACD,WAHD,MAGOI,OAAO;AACf,SAZH,EAaEG,IAbF,CAcEC,eAAGC,iBAAH,CACEX,iBAAKY,IAAL,CAAUC,SAAV,EAAqB,oCAArB,EAA2DT,SAA3D,CADF,CAdF;AAkBD,OAnBM,CAAP;AAoBD;;;;;;gDAEgBU,M,EAAQC,Q;;;;;;AACjBX,gBAAAA,S,GAAY,gCAAkBU,MAAlB,EAA0BC,QAA1B,C;;uBACZ,KAAKlB,MAAL,CACJ;AACEC,kBAAAA,QAAQ,EAAE,cADZ;AAEEC,kBAAAA,UAAU,EAAE;AACVC,oBAAAA,IAAI,iBAAUI,SAAV;AADM;AAFd,iBADI,EAOJ,UAAAF,KAAK,EAAI;AACP,sBAAIA,KAAJ,EAAWM,OAAO,CAACN,KAAR,CAAcA,KAAd;AACZ,iBATG,C;;;;;;;;;;;;;;;;;;gCAaI;AACV,WAAKc,KAAL,GAAa,4BAAb;AACD;;;gCAEW;AACV,WAAKC,KAAL,GAAaC,yBAAaC,YAAb,CAA0B;AACrCH,QAAAA,KAAK,EAAE,KAAKA;AADyB,OAA1B,CAAb;AAGD;;;sBAESC,K,EAAO;AACf,WAAKpB,MAAL,GAAcoB,KAAd;AACD,K;wBAMW;AACV,aAAO,KAAKpB,MAAZ;AACD;;;sBANSmB,K,EAAO;AACf,WAAKI,MAAL,GAAcJ,KAAd;AACD,K;wBAMW;AACV,aAAO,KAAKI,MAAZ;AACD","sourcesContent":["import dropboxV2Api from 'dropbox-v2-api';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport log from '../console/logger';\r\nimport { getRemoteFileName } from '../spliter/spliter';\r\nimport { decryptToken } from '../../security/dropbox/dropbox.security';\r\n\r\nexport default class Dropbox {\r\n  constructor() {\r\n    this.initToken();\r\n    this.initStore();\r\n  }\r\n\r\n  async upload(file, name) {\r\n    await this._store(\r\n      {\r\n        resource: 'files/upload',\r\n        parameters: {\r\n          path: `/pdf/${name}`\r\n        },\r\n        readStream: file\r\n      },\r\n      error => {\r\n        if (error) log.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  download(rFileName) {\r\n    return new Promise((resolve, reject) => {\r\n      this._store(\r\n        {\r\n          resource: 'files/download',\r\n          parameters: {\r\n            path: `/pdf/${rFileName}`\r\n          }\r\n        },\r\n        error => {\r\n          if (error) {\r\n            console.error(error);\r\n            reject(error);\r\n          } else resolve();\r\n        }\r\n      ).pipe(\r\n        fs.createWriteStream(\r\n          path.join(__dirname, '../../../../static/temporary-files', rFileName)\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  async removeFile(userID, fileName) {\r\n    const rFileName = getRemoteFileName(userID, fileName);\r\n    await this._store(\r\n      {\r\n        resource: 'files/delete',\r\n        parameters: {\r\n          path: `/pdf/${rFileName}`\r\n        }\r\n      },\r\n      error => {\r\n        if (error) console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  initToken() {\r\n    this.token = decryptToken();\r\n  }\r\n\r\n  initStore() {\r\n    this.store = dropboxV2Api.authenticate({\r\n      token: this.token\r\n    });\r\n  }\r\n\r\n  set store(store) {\r\n    this._store = store;\r\n  }\r\n\r\n  set token(token) {\r\n    this._token = token;\r\n  }\r\n\r\n  get store() {\r\n    return this._store;\r\n  }\r\n\r\n  get token() {\r\n    return this._token;\r\n  }\r\n}\r\n"],"file":"dropbox.js"}