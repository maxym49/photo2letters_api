{"version":3,"sources":["../../../src/tools/pdf-maker/pdf.js"],"names":["PdfMaker","name","_id","userID","fileName","_doc","Kit","_filePath","path","join","__dirname","_file","fs","createWriteStream","pipe","fontFamily","fontSize","text","addPage","Promise","resolve","reject","save","end","buffers","on","chunk","push","dropbox","Dropbox","fileToUpload","createReadStream","toString","upload","then","pdfBuffer","Buffer","concat","unlink","err","error","log","fontF","_fontFamily","font","fontS","_fontSize","backgroundC","_backgroundColor","_pdfBuffer","_userID","fileN","_fileName"],"mappings":"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","sourcesContent":["import Kit from 'pdfkit';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport log from '../console/logger';\r\nimport Dropbox from '../drop-box/dropbox';\r\nimport { getRemoteFileName } from '../spliter/spliter';\r\n\r\nexport default class PdfMaker {\r\n  constructor(name, _id) {\r\n    this.userID = _id;\r\n    this.fileName = getRemoteFileName(_id, name);\r\n    this._doc = new Kit();\r\n    this._filePath = path.join(\r\n      __dirname,\r\n      '../../../../static/temporary-files',\r\n      `${this.fileName}`\r\n    );\r\n    this._file = fs.createWriteStream(this._filePath);\r\n    this._doc.pipe(this._file);\r\n    this.fontFamily = path.join(\r\n      __dirname,\r\n      '../../../../static/fonts',\r\n      'Lato-Regular.ttf'\r\n    );\r\n    this.fontSize = 12;\r\n  }\r\n\r\n  writeLine(text) {\r\n    this._doc.text(text);\r\n  }\r\n\r\n  addPage() {\r\n    this._doc.addPage();\r\n  }\r\n\r\n  async save() {\r\n    try {\r\n      return new Promise((resolve, reject) => {\r\n        this._doc.save();\r\n        this._doc.end();\r\n        const buffers = [];\r\n        this._doc.on('data', chunk => buffers.push(chunk));\r\n        this._doc.on('end', () => {\r\n          const dropbox = new Dropbox();\r\n          const fileToUpload = fs.createReadStream(this._filePath.toString());\r\n          dropbox\r\n            .upload(fileToUpload, `${this.fileName}`)\r\n            .then(() => {\r\n              this.pdfBuffer = Buffer.concat(buffers);\r\n              fs.unlink(this._filePath.toString(), err => {\r\n                reject(err);\r\n              });\r\n              resolve(this.pdfBuffer);\r\n            })\r\n            .catch(error => {\r\n              log.error(error);\r\n              reject(error);\r\n            });\r\n        });\r\n      });\r\n    } catch (e) {\r\n      log.error(e);\r\n    }\r\n  }\r\n\r\n  set fontFamily(fontF) {\r\n    this._fontFamily = fontF;\r\n    this._doc.font(fontF);\r\n  }\r\n\r\n  set fontSize(fontS) {\r\n    this._fontSize = fontS;\r\n    this._doc.fontSize(fontS);\r\n  }\r\n\r\n  set backgroudColor(backgroundC) {\r\n    this._backgroundColor = backgroundC;\r\n  }\r\n\r\n  set pdfBuffer(pdfBuffer) {\r\n    this._pdfBuffer = pdfBuffer;\r\n  }\r\n\r\n  set userID(userID) {\r\n    this._userID = userID;\r\n  }\r\n\r\n  set fileName(fileN) {\r\n    this._fileName = fileN;\r\n  }\r\n\r\n  get fontFamily() {\r\n    return this._fontFamily;\r\n  }\r\n\r\n  get fontSize() {\r\n    return this._fontSize;\r\n  }\r\n\r\n  get backgroudColor() {\r\n    return this._backgroundColor;\r\n  }\r\n\r\n  get pdfBuffer() {\r\n    return this._pdfBuffer;\r\n  }\r\n\r\n  get userID() {\r\n    return this._userID;\r\n  }\r\n\r\n  get fileName() {\r\n    return this._fileName;\r\n  }\r\n}\r\n"],"file":"pdf.js"}