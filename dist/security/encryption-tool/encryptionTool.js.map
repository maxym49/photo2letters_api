{"version":3,"sources":["../../../src/security/encryption-tool/encryptionTool.js"],"names":["EncryptionTool","init","algorithm","initKey","initIv","key","Buffer","alloc","iv","itemToEncrypt","cipher","crypto","createCipheriv","from","encrypted","update","concat","toString","encryptedData","itemToDecrypt","iv_item","encryptedText","decipher","createDecipheriv","decrypted","_algorithm","_key","_iv"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,c;;;AAEjB,4BAAc;AAAA;;AACV,SAAKC,IAAL;AACH;;;;2BAEM;AACH,WAAKC,SAAL,GAAiB,aAAjB;AACA,WAAKC,OAAL;AACA,WAAKC,MAAL;AACA,WAAKA,MAAL;AACH;;;8BAES;AACN,WAAKC,GAAL,GAAWC,MAAM,CAACC,KAAP,CAAa,EAAb,CAAX;AACH;;;6BAEQ;AACL,WAAKC,EAAL,GAAUF,MAAM,CAACC,KAAP,CAAa,EAAb,CAAV;AACH;;;4BAEOE,a,EAAe;AACnB,UAAMC,MAAM,GAAGC,mBAAOC,cAAP,CAAsB,KAAKV,SAA3B,EAAsCI,MAAM,CAACO,IAAP,CAAY,KAAKR,GAAjB,CAAtC,EAA6D,KAAKG,EAAlE,CAAf;;AACA,UAAIM,SAAS,GAAGJ,MAAM,CAACK,MAAP,CAAcN,aAAd,CAAhB;AACAK,MAAAA,SAAS,GAAGR,MAAM,CAACU,MAAP,CAAc,CAACF,SAAD,EAAYJ,MAAM,SAAN,EAAZ,CAAd,CAAZ;AACA,aAAO;AAAEF,QAAAA,EAAE,EAAE,KAAKA,EAAL,CAAQS,QAAR,CAAiB,KAAjB,CAAN;AAA+BC,QAAAA,aAAa,EAAEJ,SAAS,CAACG,QAAV,CAAmB,KAAnB;AAA9C,OAAP;AACH;;;4BAEOE,a,EAAe;AACnB,UAAMC,OAAO,GAAGd,MAAM,CAACO,IAAP,CAAYM,aAAa,CAACX,EAA1B,EAA8B,KAA9B,CAAhB;AACA,UAAMa,aAAa,GAAGf,MAAM,CAACO,IAAP,CAAYM,aAAa,CAACD,aAAd,CAA4BD,QAA5B,EAAZ,EAAoD,KAApD,CAAtB;;AAEA,UAAMK,QAAQ,GAAGX,mBAAOY,gBAAP,CAAwB,KAAKrB,SAA7B,EAAwCI,MAAM,CAACO,IAAP,CAAY,KAAKR,GAAjB,CAAxC,EAA+De,OAA/D,CAAjB;;AAEA,UAAII,SAAS,GAAGF,QAAQ,CAACP,MAAT,CAAgBM,aAAhB,CAAhB;AACAG,MAAAA,SAAS,GAAGlB,MAAM,CAACU,MAAP,CAAc,CAACQ,SAAD,EAAYF,QAAQ,SAAR,EAAZ,CAAd,CAAZ;AACA,aAAOE,SAAS,CAACP,QAAV,EAAP;AACH;;;sBAEaf,S,EAAW;AACrB,WAAKuB,UAAL,GAAkBvB,SAAlB;AACH,K;wBAce;AACZ,aAAO,KAAKuB,UAAZ;AACH;;;sBAdOpB,G,EAAK;AACT,WAAKqB,IAAL,GAAYrB,GAAZ;AACH,K;wBAcS;AACN,aAAO,KAAKqB,IAAZ;AACH;;;sBAdMlB,E,EAAI;AACP,WAAKmB,GAAL,GAAWnB,EAAX;AACH,K;wBAEQ;AACL,aAAO,KAAKmB,GAAZ;AACH","sourcesContent":["import crypto from 'crypto';\r\n\r\nexport default class EncryptionTool {\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.algorithm = 'aes-256-cbc';\r\n        this.initKey();\r\n        this.initIv();\r\n        this.initIv();\r\n    }\r\n\r\n    initKey() {\r\n        this.key = Buffer.alloc(32);\r\n    }\r\n\r\n    initIv() {\r\n        this.iv = Buffer.alloc(16);\r\n    }\r\n\r\n    encrypt(itemToEncrypt) {\r\n        const cipher = crypto.createCipheriv(this.algorithm, Buffer.from(this.key), this.iv);\r\n        let encrypted = cipher.update(itemToEncrypt);\r\n        encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n        return { iv: this.iv.toString('hex'), encryptedData: encrypted.toString('hex') };\r\n    }\r\n\r\n    decrypt(itemToDecrypt) {\r\n        const iv_item = Buffer.from(itemToDecrypt.iv, 'hex');\r\n        const encryptedText = Buffer.from(itemToDecrypt.encryptedData.toString(), 'hex');\r\n\r\n        const decipher = crypto.createDecipheriv(this.algorithm, Buffer.from(this.key), iv_item);\r\n\r\n        let decrypted = decipher.update(encryptedText);\r\n        decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n        return decrypted.toString();\r\n    }\r\n\r\n    set algorithm(algorithm) {\r\n        this._algorithm = algorithm;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    set iv(iv) {\r\n        this._iv = iv;\r\n    }\r\n\r\n    get iv() {\r\n        return this._iv;\r\n    }\r\n\r\n    get algorithm() {\r\n        return this._algorithm;\r\n    }\r\n\r\n    get key() {\r\n        return this._key;\r\n    }\r\n}"],"file":"encryptionTool.js"}