{"version":3,"sources":["../../../src/security/encryption-tool/encryptionTool.js"],"names":["EncryptionTool","init","algorithm","initKey","initIv","key","Buffer","alloc","iv","itemToEncrypt","cipher","crypto","createCipheriv","from","encrypted","update","concat","toString","encryptedData","itemToDecrypt","iv_item","encryptedText","decipher","createDecipheriv","decrypted","_algorithm","_key","_iv"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,c;;;AACnB,4BAAc;AAAA;;AACZ,SAAKC,IAAL;AACD;;;;2BAEM;AACL,WAAKC,SAAL,GAAiB,aAAjB;AACA,WAAKC,OAAL;AACA,WAAKC,MAAL;AACA,WAAKA,MAAL;AACD;;;8BAES;AACR,WAAKC,GAAL,GAAWC,MAAM,CAACC,KAAP,CAAa,EAAb,CAAX;AACD;;;6BAEQ;AACP,WAAKC,EAAL,GAAUF,MAAM,CAACC,KAAP,CAAa,EAAb,CAAV;AACD;;;4BAEOE,a,EAAe;AACrB,UAAMC,MAAM,GAAGC,mBAAOC,cAAP,CACb,KAAKV,SADQ,EAEbI,MAAM,CAACO,IAAP,CAAY,KAAKR,GAAjB,CAFa,EAGb,KAAKG,EAHQ,CAAf;;AAKA,UAAIM,SAAS,GAAGJ,MAAM,CAACK,MAAP,CAAcN,aAAd,CAAhB;AACAK,MAAAA,SAAS,GAAGR,MAAM,CAACU,MAAP,CAAc,CAACF,SAAD,EAAYJ,MAAM,SAAN,EAAZ,CAAd,CAAZ;AACA,aAAO;AACLF,QAAAA,EAAE,EAAE,KAAKA,EAAL,CAAQS,QAAR,CAAiB,KAAjB,CADC;AAELC,QAAAA,aAAa,EAAEJ,SAAS,CAACG,QAAV,CAAmB,KAAnB;AAFV,OAAP;AAID;;;4BAEOE,a,EAAe;AACrB,UAAMC,OAAO,GAAGd,MAAM,CAACO,IAAP,CAAYM,aAAa,CAACX,EAA1B,EAA8B,KAA9B,CAAhB;AACA,UAAMa,aAAa,GAAGf,MAAM,CAACO,IAAP,CACpBM,aAAa,CAACD,aAAd,CAA4BD,QAA5B,EADoB,EAEpB,KAFoB,CAAtB;;AAKA,UAAMK,QAAQ,GAAGX,mBAAOY,gBAAP,CACf,KAAKrB,SADU,EAEfI,MAAM,CAACO,IAAP,CAAY,KAAKR,GAAjB,CAFe,EAGfe,OAHe,CAAjB;;AAMA,UAAII,SAAS,GAAGF,QAAQ,CAACP,MAAT,CAAgBM,aAAhB,CAAhB;AACAG,MAAAA,SAAS,GAAGlB,MAAM,CAACU,MAAP,CAAc,CAACQ,SAAD,EAAYF,QAAQ,SAAR,EAAZ,CAAd,CAAZ;AACA,aAAOE,SAAS,CAACP,QAAV,EAAP;AACD;;;sBAEaf,S,EAAW;AACvB,WAAKuB,UAAL,GAAkBvB,SAAlB;AACD,K;wBAce;AACd,aAAO,KAAKuB,UAAZ;AACD;;;sBAdOpB,G,EAAK;AACX,WAAKqB,IAAL,GAAYrB,GAAZ;AACD,K;wBAcS;AACR,aAAO,KAAKqB,IAAZ;AACD;;;sBAdMlB,E,EAAI;AACT,WAAKmB,GAAL,GAAWnB,EAAX;AACD,K;wBAEQ;AACP,aAAO,KAAKmB,GAAZ;AACD","sourcesContent":["import crypto from 'crypto';\r\n\r\nexport default class EncryptionTool {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.algorithm = 'aes-256-cbc';\r\n    this.initKey();\r\n    this.initIv();\r\n    this.initIv();\r\n  }\r\n\r\n  initKey() {\r\n    this.key = Buffer.alloc(32);\r\n  }\r\n\r\n  initIv() {\r\n    this.iv = Buffer.alloc(16);\r\n  }\r\n\r\n  encrypt(itemToEncrypt) {\r\n    const cipher = crypto.createCipheriv(\r\n      this.algorithm,\r\n      Buffer.from(this.key),\r\n      this.iv\r\n    );\r\n    let encrypted = cipher.update(itemToEncrypt);\r\n    encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n    return {\r\n      iv: this.iv.toString('hex'),\r\n      encryptedData: encrypted.toString('hex')\r\n    };\r\n  }\r\n\r\n  decrypt(itemToDecrypt) {\r\n    const iv_item = Buffer.from(itemToDecrypt.iv, 'hex');\r\n    const encryptedText = Buffer.from(\r\n      itemToDecrypt.encryptedData.toString(),\r\n      'hex'\r\n    );\r\n\r\n    const decipher = crypto.createDecipheriv(\r\n      this.algorithm,\r\n      Buffer.from(this.key),\r\n      iv_item\r\n    );\r\n\r\n    let decrypted = decipher.update(encryptedText);\r\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n    return decrypted.toString();\r\n  }\r\n\r\n  set algorithm(algorithm) {\r\n    this._algorithm = algorithm;\r\n  }\r\n\r\n  set key(key) {\r\n    this._key = key;\r\n  }\r\n\r\n  set iv(iv) {\r\n    this._iv = iv;\r\n  }\r\n\r\n  get iv() {\r\n    return this._iv;\r\n  }\r\n\r\n  get algorithm() {\r\n    return this._algorithm;\r\n  }\r\n\r\n  get key() {\r\n    return this._key;\r\n  }\r\n}\r\n"],"file":"encryptionTool.js"}