{"version":3,"sources":["../../../src/config/authentication/passportStrategies.js"],"names":["config","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","validate","payload","done","User","findById","_id","toString","err","user","useAllStrategies","passport","use","createStrategy","Strategy"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG;AACbC,EAAAA,cAAc,EAAEC,wBAAWC,2BAAX,EADH;AAEbC,EAAAA,WAAW,EAAE;AAFA,CAAf;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAUC,IAAV,EAAmB;AAClCC,mBAAKC,QAAL,CAAcH,OAAO,CAACI,GAAR,CAAYC,QAAZ,EAAd,EAAsC,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnD,QAAID,GAAJ,EAAS;AACP,aAAOL,IAAI,CAACK,GAAD,EAAM,KAAN,CAAX;AACD;;AACD,QAAIC,IAAJ,EAAU;AACR,aAAON,IAAI,CAAC,IAAD,EAAOM,IAAP,CAAX;AACD,KAFD,MAEO;AACL,aAAON,IAAI,CAAC,IAAD,EAAO,KAAP,CAAX;AACD;AACF,GATD;AAUD,CAXD;;AAaA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B;AACAC,uBAASC,GAAT,CAAaR,iBAAKS,cAAL,EAAb;;AACAF,uBAASC,GAAT,CAAa,IAAIE,qBAAJ,CAAalB,MAAb,EAAqBK,QAArB,CAAb;AACD,CAJD","sourcesContent":["import passport from 'passport';\r\nimport { Strategy, ExtractJwt } from 'passport-jwt';\r\nimport User from '../../common-models/user';\r\nimport { decryptSecret } from '../../security/tokens/secret';\r\n\r\nconst config = {\r\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n  secretOrKey: decryptSecret()\r\n};\r\n\r\nconst validate = (payload, done) => {\r\n  User.findById(payload._id.toString(), (err, user) => {\r\n    if (err) {\r\n      return done(err, false);\r\n    }\r\n    if (user) {\r\n      return done(null, user);\r\n    } else {\r\n      return done(null, false);\r\n    }\r\n  });\r\n};\r\n\r\nconst useAllStrategies = () => {\r\n  // \"passport local mongoose plugin\" allows you to use method createStrategy()\r\n  passport.use(User.createStrategy());\r\n  passport.use(new Strategy(config, validate));\r\n};\r\n\r\nexport { useAllStrategies };\r\n"],"file":"passportStrategies.js"}