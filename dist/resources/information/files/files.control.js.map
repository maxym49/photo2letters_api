{"version":3,"sources":["../../../../src/resources/information/files/files.control.js"],"names":["savedFiles","req","res","next","user","_id","files","status","end","json"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEK,uBAAYF,GAAG,CAACG,IAAJ,CAASC,GAArB,CAFL;;AAAA;AAETC,YAAAA,KAFS;AAGf,gBAAI,CAACA,KAAL,EAAYJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,GAAZ,KACK;AACHN,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACnBH,gBAAAA,KAAK,EAALA;AADmB,eAArB;AAGD;AARc;AAAA;;AAAA;AAAA;AAAA;AAUfH,YAAAA,IAAI,aAAJ;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVH,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import { getByUserID } from '../../../services/file.service';\r\n\r\nconst savedFiles = async (req, res, next) => {\r\n  try {\r\n    const files = await getByUserID(req.user._id);\r\n    if (!files) res.status(404).end();\r\n    else {\r\n      res.status(200).json({\r\n        files\r\n      });\r\n    }\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nexport { savedFiles };\r\n"],"file":"files.control.js"}