{"version":3,"sources":["../../../src/resources/photoFile/file.control.js"],"names":["saveFile","req","res","next","fileName","body","user","cc","status","end","ocr","OCR","userName","email","image","base64","startRecognize","text","file","emailObj","value","length","Object","assign","selectedFiles","_id","toString","setTimeout","removeAllFiles","files","forEach","dropbox","Dropbox","removeFile","name","removeSpecificFile","filesToRemove","title","error"],"mappings":"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","sourcesContent":["import {\r\n  create,\r\n  canCreate,\r\n  remove,\r\n  getByUserID\r\n} from '../../services/file.service';\r\nimport OCR from '../../tools/ocr/ocr';\r\nimport Dropbox from '../../tools/drop-box/dropbox';\r\nimport { prepareToSend } from '../email/email.control';\r\n\r\nconst saveFile = async (req, res, next) => {\r\n  try {\r\n    const { fileName } = req.body;\r\n    const cc = await canCreate(req.user, fileName);\r\n    if (!cc) res.status(409).end();\r\n    else {\r\n      res.status(201).end();\r\n      const ocr = new OCR();\r\n      ocr.fileName = fileName;\r\n      ocr.userName = req.user.email;\r\n      ocr.image = req.body.image.base64;\r\n      await ocr.startRecognize();\r\n      const file = await create(req.user, fileName, ocr.text);\r\n      if (req.body.emailObj.value.length) {\r\n        Object.assign(req.body.emailObj, {\r\n          selectedFiles: [{ _id: file._id.toString() }]\r\n        });\r\n        //dropbox despite returing resolved promise needs to have a 1s delay to load up files\r\n        setTimeout(async () => await prepareToSend(req.user, req.body), 1000);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nconst removeAllFiles = async (req, res, next) => {\r\n  try {\r\n    const files = await getByUserID(req.user);\r\n    files.forEach(async file => {\r\n      const dropbox = new Dropbox();\r\n      await dropbox.removeFile(req.user._id, file.name);\r\n      await remove(file._id);\r\n    });\r\n    res.status(201).end();\r\n  } catch (error) {\r\n    next(error);\r\n    res.status(500).end();\r\n  }\r\n};\r\n\r\nconst removeSpecificFile = async (req, res, next) => {\r\n  try {\r\n    const { filesToRemove } = req.body;\r\n    if (!filesToRemove.length) {\r\n      res.status(404).end();\r\n    } else {\r\n      filesToRemove.forEach(async file => {\r\n        const dropbox = new Dropbox();\r\n        await dropbox.removeFile(req.user._id, file.title);\r\n        await remove(file.value);\r\n      });\r\n      res.status(201).end();\r\n    }\r\n  } catch (error) {\r\n    next(error);\r\n    res.status(500).end();\r\n  }\r\n};\r\n\r\nexport { saveFile, removeAllFiles, removeSpecificFile };\r\n"],"file":"file.control.js"}