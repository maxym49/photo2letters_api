{"version":3,"sources":["../../../src/resources/email/email.control.js"],"names":["send","req","res","next","prepareToSend","user","body","status","end","_id","cc","emailObj","files","selectedFiles","sFiles","forEach","file","sFile","toString","push","connectDropbox","then","attachments","fillAttachments","setAndSend","log","error","removeFiles","rFileName","name","fs","unlink","path","join","__dirname","Promise","resolve","dropbox","Dropbox","downloadFiles","df","index","length","map","download","filePath","fileToAdd","filename","value","sender","Sender","subject","SUBJECT_TEXT","userEmail","init","sendMail"],"mappings":"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","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport { getByUserID } from '../../services/file.service';\r\nimport { canCreate, create, update } from '../../services/email.service';\r\nimport Dropbox from '../../tools/drop-box/dropbox';\r\nimport { getRemoteFileName } from '../../tools/spliter/spliter';\r\nimport Sender from '../../tools/email-sender/sender';\r\nimport { SUBJECT_TEXT } from '../../tools/constatns/email';\r\nimport log from '../../tools/console/logger';\r\n\r\nconst send = async (req, res, next) => {\r\n  try {\r\n    await prepareToSend(req.user, req.body);\r\n    res.status(201).end();\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nconst prepareToSend = async (user, body) => {\r\n  try {\r\n    const cc = await canCreate(user._id);\r\n    const _id = user._id;\r\n    if (cc) await create(user, body.emailObj);\r\n    else await update(user, body.emailObj);\r\n\r\n    const files = await getByUserID(_id);\r\n    const { selectedFiles } = body.emailObj;\r\n    const sFiles = [];\r\n    files.forEach(file => {\r\n      selectedFiles.forEach(sFile => {\r\n        if (sFile._id === file._id.toString()) {\r\n          sFiles.push(file);\r\n        }\r\n      });\r\n    });\r\n\r\n    connectDropbox(sFiles, _id).then(async () => {\r\n      const attachments = fillAttachments(sFiles, _id);\r\n      await setAndSend(body.emailObj, attachments, sFiles, _id);\r\n    });\r\n  } catch (error) {\r\n    log.error(error);\r\n  }\r\n};\r\n\r\nconst removeFiles = async (files, _id) => {\r\n  await files.forEach(async file => {\r\n    const rFileName = getRemoteFileName(_id, file.name);\r\n    fs.unlink(\r\n      path\r\n        .join(__dirname, '../../../static/temporary-files', rFileName)\r\n        .toString(),\r\n      error => {\r\n        if (error) {\r\n          log.error(error);\r\n        }\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nconst connectDropbox = async (files, _id) => {\r\n  return new Promise(resolve => {\r\n    const dropbox = new Dropbox();\r\n    downloadFiles(files, _id, dropbox)\r\n      .then(df => {\r\n        df.forEach((file, index) => {\r\n          if (index === df.length - 1) {\r\n            file.then(() => resolve());\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        log.error(error);\r\n      });\r\n  });\r\n};\r\n\r\nconst downloadFiles = async (files, _id, dropbox) => {\r\n  return await files.map(async (file, index) => {\r\n    try {\r\n      const rFileName = getRemoteFileName(_id, file.name);\r\n      await dropbox.download(rFileName);\r\n      return index;\r\n    } catch (error) {\r\n      log.error(error);\r\n    }\r\n  });\r\n};\r\n\r\nconst fillAttachments = (files, _id) => {\r\n  const attachments = [];\r\n  files.forEach(file => {\r\n    const rFileName = getRemoteFileName(_id, file.name);\r\n    const filePath = path.join(\r\n      __dirname,\r\n      '../../../static/temporary-files',\r\n      rFileName\r\n    );\r\n    const fileToAdd = {\r\n      filename: `${file.name}.pdf`,\r\n      path: filePath\r\n    };\r\n    attachments.push(fileToAdd);\r\n  });\r\n  return attachments;\r\n};\r\n\r\nconst setAndSend = async ({ value }, attachments, files, _id) => {\r\n  return new Promise(resolve => {\r\n    const sender = new Sender();\r\n    sender.subject = SUBJECT_TEXT;\r\n    sender.userEmail = value;\r\n    sender.attachments = attachments;\r\n    sender\r\n      .init()\r\n      .then(() => {\r\n        sender.sendMail().then(async () => {\r\n          await removeFiles(files, _id);\r\n        });\r\n      })\r\n      .catch(error => log.error(error));\r\n    resolve();\r\n  });\r\n};\r\n\r\nexport { send, prepareToSend };\r\n"],"file":"email.control.js"}