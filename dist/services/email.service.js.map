{"version":3,"sources":["../../src/services/email.service.js"],"names":["getById","id","Email","findById","getByUserId","user_id","find","canCreate","emailDataExists","length","create","_id","value","selectedFiles","newUser","save","update","emailObj","currentEmail","Object","assign","updateOne"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDC,kBAAMC,QAAN,CAAeF,EAAf,CADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPD,OAAO;AAAA;AAAA;AAAA,GAAb;;;;AAIA,IAAMI,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLH,kBAAMI,IAAN,CAAW;AAAED,cAAAA,OAAO,EAAPA;AAAF,aAAX,CADK;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXD,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAIA,IAAMG,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAMN,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcG,WAAW,CAACH,EAAD,CADzB;;AAAA;AACVO,YAAAA,eADU;;AAAA,iBAEZA,eAAe,CAACC,MAFJ;AAAA;AAAA;AAAA;;AAAA,8CAEmB,KAFnB;;AAAA;AAAA,8CAGJ,IAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATF,SAAS;AAAA;AAAA;AAAA,GAAf;;;;AAMA,IAAMG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;AAAkBC,YAAAA,KAAlB,SAAkBA,KAAlB,EAAyBC,aAAzB,SAAyBA,aAAzB;AACPC,YAAAA,OADO,GACG,IAAIZ,iBAAJ,CAAU;AACxBG,cAAAA,OAAO,EAAEM,GADe;AAExBC,cAAAA,KAAK,EAALA,KAFwB;AAGxBC,cAAAA,aAAa,EAAbA;AAHwB,aAAV,CADH;AAAA;AAAA,mBAMPC,OAAO,CAACC,IAAR,EANO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANL,MAAM;AAAA;AAAA;AAAA,GAAZ;;;;AASA,IAAMM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,yBAAgBC,QAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASN,YAAAA,GAAT,SAASA,GAAT;AAAA;AAAA,mBACcP,WAAW,CAACO,GAAD,CADzB;;AAAA;AACPO,YAAAA,YADO;AAEbC,YAAAA,MAAM,CAACC,MAAP,CAAcF,YAAd,EAA4BD,QAA5B;AAFa;AAAA,mBAGPf,kBAAMmB,SAAN,CAAgB;AACpBT,cAAAA,KAAK,EAAEM,YAAY,CAACN,KADA;AAEpBC,cAAAA,aAAa,EAAEK,YAAY,CAACL;AAFR,aAAhB,CAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANG,MAAM;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["import Email from '../common-models/email';\r\n\r\nconst getById = async id => {\r\n  return await Email.findById(id);\r\n};\r\n\r\nconst getByUserId = async user_id => {\r\n  return await Email.find({ user_id });\r\n};\r\n\r\nconst canCreate = async id => {\r\n  const emailDataExists = await getByUserId(id);\r\n  if (emailDataExists.length) return false;\r\n  else return true;\r\n};\r\n\r\nconst create = async ({ _id }, { value, selectedFiles }) => {\r\n  const newUser = new Email({\r\n    user_id: _id,\r\n    value,\r\n    selectedFiles\r\n  });\r\n  await newUser.save();\r\n};\r\n\r\nconst update = async ({ _id }, emailObj) => {\r\n  const currentEmail = await getByUserId(_id);\r\n  Object.assign(currentEmail, emailObj);\r\n  await Email.updateOne({\r\n    value: currentEmail.value,\r\n    selectedFiles: currentEmail.selectedFiles\r\n  });\r\n};\r\n\r\nexport { getById, getByUserId, canCreate, create, update };\r\n"],"file":"email.service.js"}